{% extends('layouts/base.min.jinja') %}
{% block page %}
{% if not session.get('development') %}
<script>
    if (!(/Mobi|Android|iPhone/i.test(navigator.userAgent))) {
        window.location.replace("/install");
    }
</script>
{% endif %}
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://unpkg.com/htmx.org@1.7.0"></script>
<script src="https://unpkg.com/@simplewebauthn/browser/dist/bundle/index.umd.min.js"></script>
<script>
    const { startRegistration, startAuthentication } = SimpleWebAuthnBrowser;
</script>

<div class="container container-tight py-4" onload="accessWallet()">
    <div class="text-center mb-4">
        <a href="." class="navbar-brand navbar-brand-autodark">
            <img width="220px" src="{{ session['app_logo'] }}">
        </a>
    </div>
    <div id="loading-access" class="progress progress-sm" style="display: none;">
        <div class="progress-bar progress-bar-indeterminate"></div>
    </div>
    <div class="card-md">
        <div class="card-body text-center">
            <div id="auth-loading" class="progress progress-sm" hidden>
                <div class="progress-bar progress-bar-indeterminate"></div>
            </div>
            <a id="start-auth" href="#" class="btn btn-outline-dark btn-lg" style="display: none;"></a>
        </div>
    </div>
</div>



<script>
    // Get clientId from local storage
    let clientId = localStorage.getItem('clientId');

    if (clientId) {
        // If clientId is set, create login request
        const endpoint = `{{ url_for("auth.login") }}?client_id=${clientId}`
        $.get(endpoint,
            function (data, status) {
                $('#start-auth')[0].addEventListener('click', async () => {
                    const asseResp = await startAuthentication({ optionsJSON: data });
                    $('#auth-loading').removeAttr("hidden");
                    const verificationResp = await fetch(endpoint, {
                        method: 'POST',
                        body: JSON.stringify(asseResp),
                    })

                    const verificationJSON = await verificationResp.json();

                    if (verificationJSON && verificationJSON.verified) {
                        window.location.replace("{{url_for('main.index')}}");
                    } else {
                        alert("login failed")
                        console.error(verificationJSON)
                    }
                })
            });
    } else {
        // If no clientId is set, we register a login credential and provision a new wallet.
        const endpoint = '{{ url_for("auth.register") }}';
        $.get(endpoint,
            function (data, status) {
                $('#start-auth')[0].addEventListener('click', async () => {
                    const attResp = await startRegistration({ optionsJSON: data });
                    $('#auth-loading').removeAttr("hidden");
                    const verificationResp = await fetch(endpoint, {
                        method: 'POST',
                        body: JSON.stringify(attResp)
                    });
                    const verificationJSON = await verificationResp.json();

                    if (verificationJSON && verificationJSON.verified) {
                        clientId = verificationJSON.client_id;
                        localStorage.setItem('clientId', clientId);
                        window.location.replace("{{url_for('main.index')}}");
                    } else {
                        alert("Failure");
                    }
                });
            });
    }
    setTimeout(function() {
        document.getElementById('start-auth').click();
    }, 500);
</script>


{% endblock %}